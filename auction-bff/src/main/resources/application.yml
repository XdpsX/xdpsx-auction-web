spring:
  datasource:
    url: jdbc:mysql://${MYSQL_HOST}:${MYSQL_PORT}/auction_db
    username: ${MYSQL_USER}
    password: ${MYSQL_PASSWORD}
  jpa:
    open-in-view: false
    hibernate:
      ddl-auto: none
    show-sql: true
    properties:
      hibernate:
        format_sql: true
  liquibase:
    change-log: classpath:/db/changelog/db.changelog-master.yaml # default
    enabled: true
  cache:
    type: redis
  data:
    redis:
      host: ${REDIS_HOST}
      port: ${REDIS_PORT}
      password: ${REDIS_PASSWORD}
      repositories:
        enabled: false
  mail:
    host: localhost
    port: 1025
    properties:
      mail:
        smtp:
          trust: localhost
        auth: true
        starttls:
          enable: true
        connection-timeout: 5000
        timeout: 3000
        write-timeout: 5000
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            scope:
              - email
              - profile
          facebook:
            clientId: ${FACEBOOK_CLIENT_ID}
            clientSecret: ${FACEBOOK_CLIENT_SECRET}
            scope:
              - email
              - public_profile
        provider:
          facebook:
            user-info-uri: https://graph.facebook.com/me?fields=id,name,email,picture
  kafka:
    bootstrap-servers: localhost:9092
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
#      value-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    consumer:
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
#      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: "*"
    listener:
      missing-topics-fatal: false

#logging:
#  pattern:
#    level: "%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]"

file:
  directory: images

app:
  jwt:
    access:
      secret: AxdbTQmW/abSjS3TpqhS2rHHUTtK8ESb0xq9uueSj34=
      expiration:
        seconds: 36000
    refresh:
        secret: fv0Q2PIP4I9oUhg1rYKqK2jHv4RFMDei
        expiration:
          seconds: 36000
  cors:
    allowed-origins: http://localhost:3000,http://localhost:3001
  oauth2:
    success-uri: http://localhost:3000/oauth2/redirect
    error-uri: http://localhost:3000/login

payment:
  vnpay:
    tmn-code: ${VNPAY_TMN_CODE}
    secret-key: ${VNPAY_SECRET_KEY}
    init-payment-url: https://sandbox.vnpayment.vn/paymentv2/vpcpay.html
    return-url: http://localhost:3000/%s/payment/redirect
    timeout: 15 # in minutes