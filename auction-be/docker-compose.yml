version: "3.9"

services:
  mysql:
    container_name: mysql_container
    image: mysql:8.4
    hostname: ${MYSQL_HOST}
    environment:
#      - MYSQL_DATABASE
      - MYSQL_ROOT_PASSWORD=admin
      - MYSQL_USER
      - MYSQL_PASSWORD
    ports:
      - "${MYSQL_PORT}:${MYSQL_PORT}"
    command: [ "--max_connections=500" ]
    volumes:
      - ./docker/mysql_init.sql:/docker-entrypoint-initdb.d/mysql_init.sql
      - mysql:/var/lib/mysql
    networks:
      - auction-network
  redis:
    image: redis:7.4
    container_name: redis_container
    hostname: ${REDIS_HOST}
    ports:
      - "${REDIS_PORT}:${REDIS_PORT}"
    volumes:
      - redis:/data
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    command: [ "redis-server", "--requirepass", "${REDIS_PASSWORD}" ]
  maildev:
    image: maildev/maildev:2.1.0
    container_name: maildev_container
    ports:
      - "1025:1025"
      - "1080:1080"

  zookeeper:
    image: confluentinc/cp-zookeeper:7.7.1
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - auction-network
  kafka:
    image: confluentinc/cp-kafka:7.7.1
    container_name: kafka
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - auction-network

volumes:
  mysql:
  redis:

networks:
  auction-network:
    driver: bridge
    name: auction-network